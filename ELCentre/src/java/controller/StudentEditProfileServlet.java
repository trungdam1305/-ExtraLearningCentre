package controller;

import dal.HocSinhDAO;
import dal.TruongHocDAO;
import dao.TaiKhoanDAO;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.MultipartConfig;
import jakarta.servlet.http.*;
import model.HocSinh;
import model.TaiKhoan;

import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.util.List;
import model.TruongHoc;

@MultipartConfig(fileSizeThreshold = 1024 * 1024, // 1MB
                 maxFileSize = 5 * 1024 * 1024,   // 5MB
                 maxRequestSize = 10 * 1024 * 1024) // 10MB
public class StudentEditProfileServlet extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession();
        TaiKhoan user = (TaiKhoan) session.getAttribute("user");

        if (user == null || user.getID_VaiTro() != 4) {
            response.sendRedirect(request.getContextPath() + "/views/login.jsp");
            return;
        }

        int idTaiKhoan = user.getID_TaiKhoan();
        int idHocSinh = HocSinhDAO.getHocSinhIdByTaiKhoanId(idTaiKhoan);
        HocSinh hocSinh = HocSinhDAO.getHocSinhById(idHocSinh);
        List<TruongHoc> dsTruongHoc = TruongHocDAO.getAllSchools();
        request.setAttribute("dsTruongHoc", dsTruongHoc);
        request.setAttribute("hocSinh", hocSinh);
        request.getRequestDispatcher("/views/student/studentEditProfile.jsp").forward(request, response);
    }
    
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        request.setCharacterEncoding("UTF-8");
        HttpSession session = request.getSession();
        TaiKhoan user = (TaiKhoan) session.getAttribute("user");
        if (user == null || user.getID_VaiTro() != 4) {
            response.sendRedirect(request.getContextPath() + "/views/login.jsp");
            return;
        }

        int idTaiKhoan = user.getID_TaiKhoan();
        int idHocSinh = HocSinhDAO.getHocSinhIdByTaiKhoanId(idTaiKhoan);
        int idTruongHoc = Integer.parseInt(request.getParameter("idTruongHoc"));

        // Nh·∫≠n d·ªØ li·ªáu
        String hoTen = request.getParameter("hoTen");
        String ngaySinhStr = request.getParameter("ngaySinh");
        String gioiTinh = request.getParameter("gioiTinh");
        String diaChi = request.getParameter("diaChi");
        String lopDangHoc = request.getParameter("lopDangHoc");
        String sdtPhuHuynh = request.getParameter("sdtPhuHuynh");
        String ghiChu = request.getParameter("ghiChu");

        // ·∫¢nh ƒë·∫°i di·ªán
        Part filePart = request.getPart("profileImage");
        String fileName = filePart.getSubmittedFileName();
        String avatarPath = null;
        if (fileName != null && !fileName.isEmpty()) {
            String uploadsDir = getServletContext().getRealPath("/") + "uploads";
            File dir = new File(uploadsDir);
            if (!dir.exists()) dir.mkdirs();
            String filePath = uploadsDir + File.separator + fileName;
            filePart.write(filePath);
            avatarPath = "uploads/" + fileName;
        }

        // Parse ng√†y sinh
        LocalDate ngaySinh = null;
        try {
            ngaySinh = LocalDate.parse(ngaySinhStr);
        } catch (Exception e) {
            e.printStackTrace();
        }

        // G√°n v√†o model
        HocSinh hs = new HocSinh();
        hs.setID_HocSinh(idHocSinh);
        hs.setID_TruongHoc(idTruongHoc); // ‚úÖ QUAN TR·ªåNG
        hs.setHoTen(hoTen);
        hs.setNgaySinh(ngaySinh);
        hs.setGioiTinh(gioiTinh);
        hs.setDiaChi(diaChi);
        hs.setLopDangHocTrenTruong(lopDangHoc);
        hs.setSDT_PhuHuynh(sdtPhuHuynh);
        hs.setGhiChu(ghiChu);
        if (avatarPath != null) {
            hs.setAvatar(avatarPath);
        }

        // C·∫≠p nh·∫≠t
        boolean updateSuccess = HocSinhDAO.updateHocSinh(hs);
        if (updateSuccess) {
            response.sendRedirect("StudentEditProfileServlet?success=1");
        } else {
            response.sendRedirect("StudentEditProfileServlet?error=1");
        }
    }

    @Override
    public String getServletInfo() {
        return "X·ª≠ l√Ω hi·ªÉn th·ªã v√† c·∫≠p nh·∫≠t h·ªì s∆° h·ªçc sinh";
    }
    
    
    public static void main(String[] args) {
        String email = "hocsinh4@example.com"; // ch·ªânh s·ª≠a email h·ªçc sinh mu·ªën test
        String password = "hspass4";

        try {
            TaiKhoan user = TaiKhoanDAO.login(email, password);
            if (user == null) {
                System.out.println("‚ùå ƒêƒÉng nh·∫≠p th·∫•t b·∫°i: Sai email ho·∫∑c m·∫≠t kh·∫©u.");
                return;
            }
            if ("Inactive".equalsIgnoreCase(user.getTrangThai())) {
                System.out.println("‚ùå T√†i kho·∫£n ch∆∞a ƒë∆∞·ª£c k√≠ch ho·∫°t.");
                return;
            }

            int idTaiKhoan = user.getID_TaiKhoan();
            int idHocSinh = HocSinhDAO.getHocSinhIdByTaiKhoanId(idTaiKhoan);

            // üîΩ T·∫°o ƒë·ªëi t∆∞·ª£ng HocSinh m·ªõi v·ªõi th√¥ng tin mu·ªën c·∫≠p nh·∫≠t
            HocSinh hs = new HocSinh();
            hs.setID_HocSinh(idHocSinh);
            hs.setID_TruongHoc(2); // ‚ö†Ô∏è ID_TruongHoc ph·∫£i t·ªìn t·∫°i trong b·∫£ng TruongHoc
            hs.setHoTen("Ph·∫°m Th·ªã H·ªìng Ng·ªçc");
            hs.setNgaySinh(LocalDate.of(2007, 9, 20));
            hs.setGioiTinh("N·ªØ");
            hs.setDiaChi("H√† N·ªôi");
            hs.setLopDangHocTrenTruong("11A5");
            hs.setSDT_PhuHuynh("0900111122");
            hs.setGhiChu("C·∫≠p nh·∫≠t sau");
            hs.setAvatar("uploads/avatar_test.jpg");

            // üü¢ G·ªçi DAO ƒë·ªÉ c·∫≠p nh·∫≠t
            boolean success = HocSinhDAO.updateHocSinh(hs);
            if (success) {
                System.out.println("‚úÖ C·∫≠p nh·∫≠t h·ªçc sinh th√†nh c√¥ng!");
            } else {
                System.out.println("‚ùå C·∫≠p nh·∫≠t h·ªçc sinh th·∫•t b·∫°i!");
            }

            // üîç Ki·ªÉm tra l·∫°i
            HocSinh updated = HocSinhDAO.getHocSinhById(idHocSinh);
            System.out.println("----- TH√îNG TIN SAU C·∫¨P NH·∫¨T -----");
            System.out.println("H·ªç t√™n:       " + updated.getHoTen());
            System.out.println("Ng√†y sinh:    " + updated.getNgaySinh());
            System.out.println("Gi·ªõi t√≠nh:    " + updated.getGioiTinh());
            System.out.println("ƒê·ªãa ch·ªâ:      " + updated.getDiaChi());
            System.out.println("Tr∆∞·ªùng h·ªçc ID:" + updated.getID_TruongHoc());
            System.out.println("L·ªõp:          " + updated.getLopDangHocTrenTruong());
            System.out.println("SƒêT PH:       " + updated.getSDT_PhuHuynh());
            System.out.println("Ghi ch√∫:      " + updated.getGhiChu());
            System.out.println("Avatar:       " + updated.getAvatar());

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    
    
}
