package controller;

import dal.PhuHuynhDAO;
import dao.TaiKhoanDAO;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.MultipartConfig;
import jakarta.servlet.http.*;
import model.HocSinh;
import model.PhuHuynh;
import model.TaiKhoan;

import java.io.File;
import java.io.IOException;
import java.util.List;

@MultipartConfig(fileSizeThreshold = 1024 * 1024, // 1MB
                 maxFileSize = 5 * 1024 * 1024,   // 5MB
                 maxRequestSize = 10 * 1024 * 1024) // 10MB
public class ParentEditProfileServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession();
        TaiKhoan user = (TaiKhoan) session.getAttribute("user");

        if (user == null || user.getID_VaiTro() != 5) {
            response.sendRedirect(request.getContextPath() + "/views/login.jsp");
            return;
        }

        int idTaiKhoan = user.getID_TaiKhoan();
        int idPhuHuynh = PhuHuynhDAO.getPhuHuynhIdByTaiKhoanId(idTaiKhoan);
        PhuHuynh ph = PhuHuynhDAO.getPhuHuynhById(idPhuHuynh);
        List<HocSinh> dsCon = PhuHuynhDAO.getListCon(idPhuHuynh);

        
        request.setAttribute("phuHuynh", ph);
        request.setAttribute("dsCon", dsCon);
        request.getRequestDispatcher("/views/parent/parentEditProfile.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        request.setCharacterEncoding("UTF-8");
        HttpSession session = request.getSession();
        TaiKhoan user = (TaiKhoan) session.getAttribute("user");

        if (user == null || user.getID_VaiTro() != 5) {
            response.sendRedirect(request.getContextPath() + "/views/login.jsp");
            return;
        }

        int idTaiKhoan = user.getID_TaiKhoan();
        int idPhuHuynh = PhuHuynhDAO.getPhuHuynhIdByTaiKhoanId(idTaiKhoan);

        String hoTen = request.getParameter("hoTen");
        String soDienThoai = request.getParameter("soDienThoai");
        String diaChi = request.getParameter("diaChi");
        String ghiChu = request.getParameter("ghiChu");

        // L·∫•y avatar c≈© t·ª´ DB ƒë·ªÉ gi·ªØ l·∫°i n·∫øu kh√¥ng upload m·ªõi
        PhuHuynh currentPhuHuynh = PhuHuynhDAO.getPhuHuynhById(idPhuHuynh);
        String currentAvatar = currentPhuHuynh.getAvatar();

        // X·ª≠ l√Ω avatar m·ªõi n·∫øu c√≥
        Part filePart = request.getPart("profileImage");
        String fileName = filePart.getSubmittedFileName();
        String avatarPath = null;
        if (fileName != null && !fileName.isEmpty()) {
            String uploadsDir = getServletContext().getRealPath("/") + "uploads";
            File dir = new File(uploadsDir);
            if (!dir.exists()) dir.mkdirs();
            String filePath = uploadsDir + File.separator + fileName;
            filePart.write(filePath);
            avatarPath = "uploads/" + fileName;
        } else {
            avatarPath = currentAvatar; // ‚ùó Gi·ªØ l·∫°i avatar c≈© n·∫øu kh√¥ng upload m·ªõi
        }

        if (fileName != null && !fileName.isEmpty()) {
            String uploadsDir = getServletContext().getRealPath("/") + "uploads";
            File dir = new File(uploadsDir);
            if (!dir.exists()) dir.mkdirs();

            String filePath = uploadsDir + File.separator + fileName;
            filePart.write(filePath);
            avatarPath = "uploads/" + fileName;
        }

        // G√°n th√¥ng tin m·ªõi v√†o model
        PhuHuynh ph = new PhuHuynh();
        ph.setID_PhuHuynh(idPhuHuynh);
        ph.setHoTen(hoTen);
        ph.setSDT(soDienThoai);
        ph.setDiaChi(diaChi);
        ph.setGhiChu(ghiChu);
        if (avatarPath != null) {
            ph.setAvatar(avatarPath);
        }

        boolean updateSuccess = PhuHuynhDAO.updatePhuHuynh(ph);
        if (updateSuccess) {
            response.sendRedirect("ParentEditProfileServlet?success=1");
        } else {
            response.sendRedirect("ParentEditProfileServlet?error=1");
        }
    }

    @Override
    public String getServletInfo() {
        return "X·ª≠ l√Ω hi·ªÉn th·ªã v√† c·∫≠p nh·∫≠t h·ªì s∆° ph·ª• huynh";
    }
    
    public static void main(String[] args) {
    String email = "phuhuynh1@example.com";  // ‚úÖ Email t√†i kho·∫£n ph·ª• huynh
    String password = "phupass1";

    try {
        TaiKhoan user = TaiKhoanDAO.login(email, password);
        if (user == null) {
            System.out.println("‚ùå ƒêƒÉng nh·∫≠p th·∫•t b·∫°i: Sai email ho·∫∑c m·∫≠t kh·∫©u.");
            return;
        }
        if ("Inactive".equalsIgnoreCase(user.getTrangThai())) {
            System.out.println("‚ùå T√†i kho·∫£n ch∆∞a ƒë∆∞·ª£c k√≠ch ho·∫°t.");
            return;
        }

        int idTaiKhoan = user.getID_TaiKhoan();
        int idPhuHuynh = PhuHuynhDAO.getPhuHuynhIdByTaiKhoanId(idTaiKhoan);
        System.out.println("üîç ID Ph·ª• huynh: " + idPhuHuynh);

        // üìù T·∫°o ƒë·ªëi t∆∞·ª£ng PhuHuynh m·ªõi v·ªõi d·ªØ li·ªáu c·∫≠p nh·∫≠t
        PhuHuynh ph = new PhuHuynh();
        ph.setID_PhuHuynh(idPhuHuynh);
        ph.setHoTen("Tr·∫ßn Th·ªã Thu H·∫±ng");
        ph.setSDT("0988123456");
        ph.setDiaChi("Tp. H·ªì Ch√≠ Minh");
        ph.setGhiChu("C·∫≠p nh·∫≠t t·ª´ servlet main test");
        ph.setAvatar("uploads/test-avatar.jpg");

        // üü¢ C·∫≠p nh·∫≠t
        boolean updated = PhuHuynhDAO.updatePhuHuynh(ph);
        if (updated) {
            System.out.println("‚úÖ C·∫≠p nh·∫≠t th√¥ng tin ph·ª• huynh th√†nh c√¥ng!");
        } else {
            System.out.println("‚ùå C·∫≠p nh·∫≠t th·∫•t b·∫°i.");
        }

        // üîç Ki·ªÉm tra l·∫°i
        PhuHuynh updatedPh = PhuHuynhDAO.getPhuHuynhById(idPhuHuynh);
        System.out.println("------ TH√îNG TIN SAU C·∫¨P NH·∫¨T ------");
        System.out.println("H·ªç t√™n     : " + updatedPh.getHoTen());
        System.out.println("SƒêT        : " + updatedPh.getSDT());
        System.out.println("ƒê·ªãa ch·ªâ    : " + updatedPh.getDiaChi());
        System.out.println("Ghi ch√∫    : " + updatedPh.getGhiChu());
        System.out.println("Avatar     : " + updatedPh.getAvatar());
    } catch (Exception e) {
        e.printStackTrace();
    }
}

}
